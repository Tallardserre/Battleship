public String generateShotCoord3() {
		Random rand = new Random();
		int stop=0;
		int i=0;
		boolean check=false;
		String coordShot="";//GENERER LES TIRS!		
		if(this.getShotArray().size()>0&&this.getShotArray().get(this.getShotArray().size()-1).get(1)=="false") {
			System.out.println("1");
			//si la liste de tir touché n'est pas vide		
			if(this.getGenerateShot().isEmpty()) {
				System.out.println("2");

				//si la liste de tir genere est vide
				if(this.getShotFired().get(this.getShotFired().size()-1).equals(this.getLastHit())) {			
					System.out.println("3");

					//si le dernier tir est touché
					if(this.getShotArray().size()>1) {
						//si on a au moins 2 tir touché
						System.out.println("aaaa");
						check=false;
						if(this.getShotArray().get(this.getShotArray().size()-1).get(1)=="false") {	
							i=this.getShotArray().size()-1;
							while(i>0&&!check) {
								System.out.println("bbbb");
								if(Game.nearCoord(this.getShotArray().get(i).get(0), lastHit)) {
									check=true;
								}
								i--;
							}
						
							if(this.getShotArray().size()<1||!check) {
								System.out.println("4");
								//si nb shot touché <1 OU deux derniers tirs non voisins
								this.setGenerateShot(Game.GenerateShotArray(this.getShotFired(), this.getLastHit()));
								//generer nouvelle liste avec lasthit
							}
							else if(this.getShotArray().size()>1&&check) {
								System.out.println("499");
									this.setGenerateShot(Game.GenerateSmartShotArray(this.getShotFired(), this.getLastHit(), this.getShotArray().get(i).get(0)));
									//generer nouvelle "smart" liste	
							}
							if(this.getGenerateShot().isEmpty()) {
								System.out.println("499898");
								this.setGenerateShot(Game.GenerateSmartShotArray(this.getShotFired(), this.getShotArray().get(i).get(0), this.getLastHit()));
							}
						}
					}
					else {
						this.setGenerateShot(Game.GenerateShotArray(this.getShotFired(), this.getLastHit()));
					}
				}	
				else{
					if(this.getShotArray().size()>1) {
						check=false;
						if(this.getShotArray().get(this.getShotArray().size()-1).get(1)=="false") {
							for(ArrayList<String> arrayStr:this.getShotArray()) {
								if(Game.nearCoord(arrayStr.get(0), lastHit)) {
									check=true;
								}
							}
						}
						if(check){//si 2 derniers tirs voisins
							System.out.println("5");
	
							this.setGenerateShot(Game.GenerateSmartShotArray(this.getShotFired(), this.getLastHit(), this.getShotArray().get(this.getShotArray().size()-2).get(0)));
							//generer nouvelle "smart" liste
							if(this.getGenerateShot().isEmpty()) {//si liste vide on inverse les deux derniers tirs dans la fonction
								i=this.getShotArray().size()-1;
								System.out.println("6");

								while(i>0&&this.getGenerateShot().isEmpty()){
									System.out.println("A i "+i+" size "+this.getGenerateShot().size());
	
									this.setGenerateShot(
											Game.GenerateSmartShotArray(this.getShotFired(), this.getShotArray().get(i-1).get(0), this.getLastHit()));
								i--;
								}
							} 
						}
					}
				}
			}
			else {							
				System.out.println("9");

			//si liste de tir genere non vide
				if(this.getLastHit().equals(this.getShotFired().get(this.getShotFired().size()-1))) {//si le dernier tir est touché
					System.out.println("10");

					if(this.getShotArray().size()<1||!Game.nearCoord(this.getShotArray().get(this.getShotArray().size()-1).get(0), this.getShotArray().get(this.getShotArray().size()-2).get(0))) {
						//si nb shot<1 OU deux derniers tirs non voisins
						System.out.println("11");

						this.setGenerateShot(Game.GenerateShotArray(this.getShotFired(), this.getLastHit()));
					}
					else {//si 2 derniers tirs voisins
						System.out.println("12");

						this.setGenerateShot(Game.GenerateSmartShotArray(this.getShotFired(), this.getShotArray().get(this.getShotArray().size()-1).get(0), this.getShotArray().get(this.getShotArray().size()-2).get(0)));
						//generer nouvelle "smart" liste
						if(this.getGenerateShot().isEmpty()) {//si liste vide on inverse les deux derniers tirs dans la fonction
							i=this.getShotArray().size()-1;
							System.out.println("13");

							while(i>0&&this.getGenerateShot().isEmpty()&&Game.nearCoord(this.getShotArray().get(i-1).get(0), this.getShotArray().get(i).get(0))){
								System.out.println("B i "+i+" size "+this.getGenerateShot().size());

								this.setGenerateShot(
										Game.GenerateSmartShotArray(this.getShotFired(), this.getShotArray().get(i-1).get(0), this.getShotArray().get(i).get(0)));
							i--;
							}
						}
					}
				}
			}
		}
		if (this.getGenerateShot().isEmpty()) {
			if(this.getShotArray().isEmpty()) {
				while(stop==0) {
					int coordShotLine=rand.nextInt((10-0));
					int coordShotColl=rand.nextInt((10-1)+1)+1;
					if(coordShotLine%2!=0||coordShotColl%2==0) {
						coordShot=Game.intToString(coordShotLine)+coordShotColl;
						if (Game.checkInputCoordShot(coordShot,this.getShotFired())) {
							stop=1;
						}
					}
					else if(coordShotLine%2==0||coordShotColl%2!=0) {
						coordShot=Game.intToString(coordShotLine)+coordShotColl;
						if (Game.checkInputCoordShot(coordShot,this.getShotFired())) {
							stop=1;
						}
					}
				}
			}
			else {
				stop=0;
				while(stop==0) {
					int coordShotLine=rand.nextInt((10-0));
					int coordShotColl=rand.nextInt((10-1)+1)+1;
					coordShot=Game.intToString(coordShotLine)+coordShotColl;
					if (Game.checkInputCoordShot(coordShot,this.getShotFired())) {
						stop=1;
					}
				}
			}
		}
		if(coordShot.equals("")) {
			i=0;
			while(i<0||i>this.getGenerateShot().size()) {
			i=rand.nextInt(this.getGenerateShot().size()+1)-1;
			}
			//on prend au hasard une coordonnée generée.
			Game.affiche(this.getGenerateShot());;
			coordShot=this.getGenerateShot().get(i);
			this.getGenerateShot().remove(i);
		}
		return coordShot;
	}
